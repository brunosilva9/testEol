# Generated by Django 3.2.16 on 2023-05-25 03:10

import json, os
import time
from django.db import migrations
from ..models import Event, Context
from datetime import datetime



def load_data(apps, schema_editor):
    print("###################################################")
    print("###            Start Loading data              ###")
    print("##################################################")

    print(".")
    time.sleep(1)  
    print("...")
    time.sleep(1)  
    print("......")
    data_file_path = os.path.join(os.path.dirname(__file__), '..', 'data', 'data.json')
    with open(data_file_path, 'r') as f:
        data = json.load(f)
        format_string = "%Y-%m-%dT%H:%M:%S.%f%z"
        for event_iterator in data['context']:# Can be any param | n= 0 ...139
            # user_id', 'path', 'course_id', 'org_id','course_user_tags X','asides X', 'module'
            context=Context.objects.create(
                user_id=data['context'][event_iterator].get('user_id',None),
                path=data['context'][event_iterator].get('path',None),
                course_id=data['context'][event_iterator].get('course_id',None),
                org_id=data['context'][event_iterator].get('org_id',None),
                module=json.dumps(data['context'][event_iterator].get('module',{})), # if empty|| as String
            
                )
            context.save()
            event=Event.objects.create(
                # ['context', 'username', 'session', 'agent', 'host', 'referer', 'accept_language', 'event', 'time', 'event_type', 'event_source', 'page']
                context=context,
                username=data['username'][event_iterator],
                session=data['session'][event_iterator],
                agent=data['agent'][event_iterator],
                referer=data['referer'][event_iterator],
                accept_language=data['accept_language'][event_iterator],
                event=data['event'][event_iterator],
                event_type=data['event_type'][event_iterator],
                event_source=data['event_source'][event_iterator],
                page=data['page'][event_iterator],
                time = datetime.strptime(data['time'][event_iterator], format_string)            
            )
            event.save()            


    print("###################################################")
    print("###            Data already Loaded              ###")
    print("##################################################")
    return 
class Migration(migrations.Migration):

    dependencies = [
        ('apiEol', '0003_alterTable'),
    ]

    operations = [
        migrations.RunPython(load_data)
    ]
